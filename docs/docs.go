// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/dtako/events": {
            "get": {
                "description": "Get event data with location information and optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "List Dtako Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by 運行NO (links to dtako_rows)",
                        "name": "unko_no",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dtako events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/events/import": {
            "post": {
                "description": "Import event data from production database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Import Dtako Events",
                "parameters": [
                    {
                        "description": "Import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/events/{id}": {
            "get": {
                "description": "Get specific event data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Get Dtako Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dtako event found",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoEvent"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/ferry": {
            "get": {
                "description": "Get ferry operation data with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "List Dtako Ferry Records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Route filter",
                        "name": "route",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dtako ferry records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoFerry"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/ferry/import": {
            "post": {
                "description": "Import ferry operation data from production database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Import Dtako Ferry Data",
                "parameters": [
                    {
                        "description": "Import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/ferry/{id}": {
            "get": {
                "description": "Get specific ferry operation data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Get Dtako Ferry Record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ferry record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dtako ferry record found",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoFerry"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/rows": {
            "get": {
                "description": "Get vehicle operation data with optional date filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "List Dtako Rows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dtako rows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/rows/import": {
            "post": {
                "description": "Import vehicle operation data from production database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Import Dtako Rows",
                "parameters": [
                    {
                        "description": "Import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dtako/rows/{id}": {
            "get": {
                "description": "Get specific vehicle operation data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako"
                ],
                "summary": "Get Dtako Row by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Row ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dtako row found",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoRow"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DtakoEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "description": {
                    "type": "string",
                    "example": "Started driving from depot"
                },
                "driver_code": {
                    "type": "string",
                    "example": "driver-123"
                },
                "event_date": {
                    "type": "string",
                    "example": "2025-01-13T10:30:00Z"
                },
                "event_type": {
                    "type": "string",
                    "example": "運転"
                },
                "id": {
                    "type": "string",
                    "example": "event-456"
                },
                "latitude": {
                    "type": "number",
                    "example": 35.6762
                },
                "longitude": {
                    "type": "number",
                    "example": 139.6503
                },
                "unko_no": {
                    "description": "運行NO - links to DtakoRow",
                    "type": "string",
                    "example": "2025010101"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "vehicle_no": {
                    "type": "string",
                    "example": "vehicle-001"
                }
            }
        },
        "models.DtakoFerry": {
            "type": "object",
            "properties": {
                "arrival_time": {
                    "type": "string",
                    "example": "2025-01-13T12:00:00Z"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "date": {
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "departure_time": {
                    "type": "string",
                    "example": "2025-01-13T08:00:00Z"
                },
                "driver_code": {
                    "type": "string",
                    "example": "driver-123"
                },
                "id": {
                    "type": "string",
                    "example": "ferry-789"
                },
                "passengers": {
                    "type": "integer",
                    "example": 150
                },
                "route": {
                    "type": "string",
                    "example": "Tokyo-Osaka"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "vehicle_no": {
                    "type": "string",
                    "example": "vehicle-001"
                },
                "vehicles": {
                    "type": "integer",
                    "example": 30
                }
            }
        },
        "models.DtakoRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "date": {
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "distance": {
                    "type": "number",
                    "example": 123.45
                },
                "driver_code": {
                    "type": "string",
                    "example": "driver-123"
                },
                "fuel_amount": {
                    "type": "number",
                    "example": 45.67
                },
                "id": {
                    "type": "string",
                    "example": "row-123"
                },
                "route_code": {
                    "type": "string",
                    "example": "route-A"
                },
                "unko_no": {
                    "description": "運行NO",
                    "type": "string",
                    "example": "2025010101"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "vehicle_no": {
                    "type": "string",
                    "example": "vehicle-001"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                }
            }
        },
        "models.ImportRequest": {
            "type": "object",
            "properties": {
                "event_type": {
                    "description": "For events",
                    "type": "string",
                    "example": "運転"
                },
                "from_date": {
                    "type": "string",
                    "example": "2025-01-01"
                },
                "route": {
                    "description": "For ferry",
                    "type": "string",
                    "example": "Tokyo-Osaka"
                },
                "to_date": {
                    "type": "string",
                    "example": "2025-01-31"
                }
            }
        },
        "models.ImportResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imported_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "imported_rows": {
                    "type": "integer",
                    "example": 150
                },
                "message": {
                    "type": "string",
                    "example": "Imported 150 rows successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/dtako",
	Schemes:          []string{},
	Title:            "DTako API",
	Description:      "Digital tachograph data management API for vehicle operation records",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
