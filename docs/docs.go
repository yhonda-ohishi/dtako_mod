// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/events": {
            "get": {
                "description": "Get event data with location information and optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_events"
                ],
                "summary": "List Dtako Events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "運行NO (Required for performance reasons)",
                        "name": "unko_no",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of records to return (default: 100, max: 1000)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dtako events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoEvent"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/events/import": {
            "post": {
                "description": "Import event data from production database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_events"
                ],
                "summary": "Import Dtako Events",
                "parameters": [
                    {
                        "description": "Import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Get specific event data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_events"
                ],
                "summary": "Get Dtako Event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dtako event found",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoEvent"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ferry_rows": {
            "get": {
                "description": "Retrieve ferry row records with optional date range and ferry company filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_ferry"
                ],
                "summary": "List ferry row records",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by ferry company name",
                        "name": "ferry_company",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoFerryRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ferry_rows/import": {
            "post": {
                "description": "Import ferry row records from production database for a date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_ferry"
                ],
                "summary": "Import ferry row records from production",
                "parameters": [
                    {
                        "description": "Import request with date range and optional ferry company filter",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ferry_rows/{id}": {
            "get": {
                "description": "Retrieve a specific ferry row record by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_ferry"
                ],
                "summary": "Get ferry row record by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ferry row record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoFerryRow"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rows": {
            "get": {
                "description": "Get vehicle operation data with optional date and vehicle filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_rows"
                ],
                "summary": "List Dtako Rows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Read date (YYYY-MM-DD)",
                        "name": "read_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle CC filter",
                        "name": "vehicle_cc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle CD filter",
                        "name": "vehicle_cd",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of dtako rows",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DtakoRow"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rows/import": {
            "post": {
                "description": "Import vehicle operation data from production database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_rows"
                ],
                "summary": "Import Dtako Rows",
                "parameters": [
                    {
                        "description": "Import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Import successful",
                        "schema": {
                            "$ref": "#/definitions/models.ImportResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rows/{id}": {
            "get": {
                "description": "Get specific vehicle operation data by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dtako_rows"
                ],
                "summary": "Get Dtako Row by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Row ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dtako row found",
                        "schema": {
                            "$ref": "#/definitions/models.DtakoRow"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DtakoEvent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "description": {
                    "type": "string",
                    "example": "Started driving from depot"
                },
                "driver_code": {
                    "type": "string",
                    "example": "driver-123"
                },
                "event_date": {
                    "type": "string",
                    "example": "2025-01-13T10:30:00Z"
                },
                "event_type": {
                    "type": "string",
                    "example": "運転"
                },
                "id": {
                    "type": "string",
                    "example": "event-456"
                },
                "latitude": {
                    "type": "number",
                    "example": 35.6762
                },
                "longitude": {
                    "type": "number",
                    "example": 139.6503
                },
                "unko_no": {
                    "description": "運行NO - links to DtakoRow",
                    "type": "string",
                    "example": "2025010101"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "vehicle_no": {
                    "type": "string",
                    "example": "vehicle-001"
                }
            }
        },
        "models.DtakoFerryRow": {
            "type": "object",
            "properties": {
                "boarding_code": {
                    "description": "乗場CD",
                    "type": "integer",
                    "example": 1
                },
                "boarding_name": {
                    "description": "乗場名",
                    "type": "string",
                    "example": "東京港"
                },
                "contract_fare": {
                    "description": "契約料金",
                    "type": "integer",
                    "example": 8000
                },
                "driver_code_1": {
                    "description": "乗務員CD1",
                    "type": "integer",
                    "example": 1001
                },
                "driver_name_1": {
                    "description": "乗務員名１",
                    "type": "string",
                    "example": "山田太郎"
                },
                "end_time": {
                    "description": "終了日時",
                    "type": "string",
                    "example": "2025-01-13T12:00:00Z"
                },
                "estimated_distance": {
                    "description": "見なし距離",
                    "type": "integer",
                    "example": 500
                },
                "ferry_company_code": {
                    "description": "フェリー会社CD",
                    "type": "integer",
                    "example": 1
                },
                "ferry_company_name": {
                    "description": "フェリー会社名",
                    "type": "string",
                    "example": "東京フェリー"
                },
                "ferry_search": {
                    "description": "ferry_srch",
                    "type": "string",
                    "example": "東京-大阪"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "landing_code": {
                    "description": "降場CD",
                    "type": "integer",
                    "example": 2
                },
                "landing_name": {
                    "description": "降場名",
                    "type": "string",
                    "example": "大阪港"
                },
                "office_code": {
                    "description": "事業所CD",
                    "type": "integer",
                    "example": 1
                },
                "office_name": {
                    "description": "事業所名",
                    "type": "string",
                    "example": "東京事業所"
                },
                "read_date": {
                    "description": "読取日",
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "settlement_class": {
                    "description": "精算区分",
                    "type": "integer",
                    "example": 1
                },
                "settlement_name": {
                    "description": "精算区分名",
                    "type": "string",
                    "example": "現金"
                },
                "ship_number": {
                    "description": "便",
                    "type": "string",
                    "example": "1便"
                },
                "ship_vehicle_class": {
                    "description": "航送車種区分",
                    "type": "integer",
                    "example": 1
                },
                "ship_vehicle_name": {
                    "description": "航送車種区分名",
                    "type": "string",
                    "example": "大型車"
                },
                "standard_fare": {
                    "description": "標準料金",
                    "type": "integer",
                    "example": 10000
                },
                "start_time": {
                    "description": "開始日時",
                    "type": "string",
                    "example": "2025-01-13T08:00:00Z"
                },
                "target_driver_class": {
                    "description": "対象乗務員区分",
                    "type": "integer",
                    "example": 1
                },
                "unko_date": {
                    "description": "運行日",
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "unko_no": {
                    "description": "運行NO",
                    "type": "string",
                    "example": "2025010101"
                },
                "vehicle_code": {
                    "description": "車輌CD",
                    "type": "integer",
                    "example": 101
                },
                "vehicle_name": {
                    "description": "車輌名",
                    "type": "string",
                    "example": "トラック1号"
                }
            }
        },
        "models.DtakoRow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "date": {
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "distance": {
                    "type": "number",
                    "example": 123.45
                },
                "driver_code": {
                    "type": "string",
                    "example": "driver-123"
                },
                "fuel_amount": {
                    "type": "number",
                    "example": 45.67
                },
                "id": {
                    "type": "string",
                    "example": "row-123"
                },
                "read_date": {
                    "type": "string",
                    "example": "2025-01-13T00:00:00Z"
                },
                "route_code": {
                    "type": "string",
                    "example": "route-A"
                },
                "unko_no": {
                    "description": "運行NO",
                    "type": "string",
                    "example": "2025010101"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "vehicle_no": {
                    "type": "string",
                    "example": "vehicle-001"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request parameters"
                }
            }
        },
        "models.ImportRequest": {
            "type": "object",
            "properties": {
                "event_type": {
                    "description": "For events",
                    "type": "string",
                    "example": "運転"
                },
                "ferry_company": {
                    "description": "For ferry rows",
                    "type": "string",
                    "example": "東京フェリー"
                },
                "from_date": {
                    "type": "string",
                    "example": "2025-01-01"
                },
                "to_date": {
                    "type": "string",
                    "example": "2025-01-31"
                }
            }
        },
        "models.ImportResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "imported_at": {
                    "type": "string",
                    "example": "2025-01-13T15:04:05Z"
                },
                "imported_rows": {
                    "type": "integer",
                    "example": 150
                },
                "message": {
                    "type": "string",
                    "example": "Imported 150 rows successfully"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/dtako",
	Schemes:          []string{},
	Title:            "DTako API",
	Description:      "Digital tachograph data management API for vehicle operation records",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
